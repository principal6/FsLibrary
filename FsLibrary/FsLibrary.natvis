<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
    <Type Name="fs::Vector&lt;*&gt;">
        <DisplayString>{{ size = {_size} capacity = {_capacity} }}</DisplayString>
        <Expand>
            <Item Name="[Size]" ExcludeView="simple">_size</Item>
            <Item Name="[Capacity]" ExcludeView="simple">_capacity</Item>
            <ArrayItems>
                <Size>_size</Size>
                <ValuePointer>_rawPointer</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="fs::Memory::Accessor&lt;*&gt;">
    <DisplayString Condition="_id == kMemoryBlockIdInvalid">{{ INVALID }}</DisplayString>
    <DisplayString>{{ ID = {_id} }}</DisplayString>
    <Expand>
      <Item Name="[ID]" ExcludeView="simple">_id</Item>
      <Item Name="[BlockOffset]" ExcludeView="simple">_blockOffset</Item>
      <Item Name="[Value]" Condition="0 &lt; _memoryAllocator->_memoryBlockArray[_blockOffset]._referenceCount">($T1*)(_memoryAllocator->_rawMemory + (_memoryAllocator->kTypeSize * _blockOffset))</Item>
      <Item Name="[MemoryBlock]">(_memoryAllocator->_memoryBlockArray[_blockOffset])</Item>
      <Item Name="[MemoryAllocator]">_memoryAllocator</Item>
    </Expand>
  </Type>
  
  <Type Name="fs::ContiguousVector&lt;*&gt;">
    <DisplayString>{{ size = {_size} }}</DisplayString>
    <Expand>
      <Item Name="[Size]" ExcludeView="simple">_size</Item>
      <Item Name="[Capacity]" ExcludeView="simple">_capacity</Item>
      <!--<Item Name="[MemoryAccessor]">_memoryAccessor</Item>-->
      <ArrayItems>
        <Size>_size</Size>
        <ValuePointer>($T1*)(_memoryAccessor._memoryAllocator->_rawMemory + (_memoryAccessor._memoryAllocator->kTypeSize * _memoryAccessor._blockOffset))</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="fs::ContiguousStringA">
    <DisplayString Condition="_length == 0 || _memoryAccessor._memoryAllocator->_memoryBlockArray[_memoryAccessor._blockOffset]._referenceCount == 0">NULL</DisplayString>
    <DisplayString>{{ Value = {_memoryAccessor._memoryAllocator->_rawMemory + (_memoryAccessor._memoryAllocator->kTypeSize * _memoryAccessor._blockOffset)} }}</DisplayString>
    <Expand>
      <Item Name="[Length]" ExcludeView="simple">_length</Item>
      <Item Name="[Hash]" ExcludeView="simple">_cachedHash</Item>
      <Item Name="[Value]" Condition="0 &lt; _length &amp;&amp; 0 &lt; _memoryAccessor._memoryAllocator->_memoryBlockArray[_memoryAccessor._blockOffset]._referenceCount">_memoryAccessor._memoryAllocator->_rawMemory + (_memoryAccessor._memoryAllocator->kTypeSize * _memoryAccessor._blockOffset)</Item>
    </Expand>
  </Type>
  
<!-- @@@ Tree BEGINS @@@ -->
  <Type Name="fs::TreeNode&lt;*&gt;">
    <DisplayString>{{ Node Data = { _data } }}</DisplayString>
    <Expand>
      <Item Name="[Node ID]">_nodeId</Item>
      <ExpandedItem>_data</ExpandedItem>
      <Item Name="[Parent Node]" Condition="_parentNodeAccessor._nodeId != kUint32Max">_parentNodeAccessor</Item>
      <Item Name="[Child Nodes]" Condition="_childNodeAccessorArray._size > 0">_childNodeAccessorArray</Item>
    </Expand>
  </Type>
  
  <Type Name="fs::TreeNodeAccessor&lt;*&gt;">
    <DisplayString>{{ Node ID [{ _nodeId }] { ((fs::TreeNode&lt;$T1&gt;*)((_tree->_nodeArray._memoryAccessor._memoryAllocator->_rawMemory + (_tree->_nodeArray._memoryAccessor._memoryAllocator->kTypeSize * _tree->_nodeArray._memoryAccessor._blockOffset))) + _slotIndex)->_data } }}</DisplayString>
    <Expand>
      <Item Name="[Node ID]">_nodeId</Item>
      <ExpandedItem>((fs::TreeNode&lt;$T1&gt;*)((_tree->_nodeArray._memoryAccessor._memoryAllocator->_rawMemory + (_tree->_nodeArray._memoryAccessor._memoryAllocator->kTypeSize * _tree->_nodeArray._memoryAccessor._blockOffset))) + _slotIndex)->_data</ExpandedItem>
      <Item Name="[Parent Node]" Condition="((fs::TreeNode&lt;$T1&gt;*)((_tree->_nodeArray._memoryAccessor._memoryAllocator->_rawMemory + (_tree->_nodeArray._memoryAccessor._memoryAllocator->kTypeSize * _tree->_nodeArray._memoryAccessor._blockOffset))) + _slotIndex)->_parentNodeAccessor._nodeId != kUint32Max">((fs::TreeNode&lt;$T1&gt;*)((_tree->_nodeArray._memoryAccessor._memoryAllocator->_rawMemory + (_tree->_nodeArray._memoryAccessor._memoryAllocator->kTypeSize * _tree->_nodeArray._memoryAccessor._blockOffset))) + _slotIndex)->_parentNodeAccessor</Item>
      <Item Name="[Child Nodes]" Condition="((fs::TreeNode&lt;$T1&gt;*)((_tree->_nodeArray._memoryAccessor._memoryAllocator->_rawMemory + (_tree->_nodeArray._memoryAccessor._memoryAllocator->kTypeSize * _tree->_nodeArray._memoryAccessor._blockOffset))) + _slotIndex)->_childNodeAccessorArray._size > 0">((fs::TreeNode&lt;$T1&gt;*)((_tree->_nodeArray._memoryAccessor._memoryAllocator->_rawMemory + (_tree->_nodeArray._memoryAccessor._memoryAllocator->kTypeSize * _tree->_nodeArray._memoryAccessor._blockOffset))) + _slotIndex)->_childNodeAccessorArray</Item>
    </Expand>
  </Type>
<!-- @@@ Tree ENDS @@@ -->

</AutoVisualizer>